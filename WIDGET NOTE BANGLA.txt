void main() function হল প্রধান ফাংশন যার ভিতরে সব কোড রান করবে।

Use of Text Widget
__________________
এটার মাধ্যমে কো অ্যাপ এর টেস্ক লেখা হয়
Example
void main() {
  runApp(Text(
    'Hello World', //text
    textDirection: TextDirection.ltr, //for remove errors
    textAlign: TextAlign.center, //text align
    overflow: TextOverflow.ellipsis,
    textScaleFactor: 1, //text size
    semanticsLabel: 'Text detail',
    maxLines: 100, //maximum limit of lines
    style: TextStyle(
      color: Colors.green,
    ), // text colors
  ));
}

Use of text style
_________________
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      appBar: AppBar(
        title: Text('Sample app'),
      ),
      body: Text(
        'Hello World',
        textAlign: TextAlign.center,
        textDirection: TextDirection.ltr,
        style: TextStyle(
          fontSize: 80,
          // fontWeight: FontWeight.bold,
          // letterSpacing: 2,
          // wordSpacing: 3,
          // color: Colors.pink,
          foreground: Paint()
            ..color = Colors.black //stroke foreground color
            ..strokeWidth = 3.0 //stroke size
            ..style = PaintingStyle.fill, //foregound text is fill or stroke
          // background: Paint()
          //   ..color =
          //       const Color.fromARGB(255, 0, 255, 8) //text background color
          //   ..strokeWidth = 0 //stroke size
          //   ..style = PaintingStyle.fill, //background is fill or stroke
          backgroundColor: Colors.brown,// background color
          fontStyle: FontStyle.italic,//fontstyle normal or italic
          //decoration: TextDecoration.underline,//for using underline or over line
          decoration: TextDecoration.combine(
              [TextDecoration.overline, TextDecoration.underline]),//if we use both underline and overline in text
          decorationColor: Colors.red, //color of underline or upperline
          decorationStyle: TextDecorationStyle.dashed,//style of underline or upper line
          shadows: [
            Shadow(color: Colors.blue,blurRadius: 1,offset:Offset(4,1))//shadow beside the text
          ]
        ),
      ),
    ),
  ));
}


use of style for once and use it for multiple text
__________________________________________________

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample app'),
          ),
          body: Column(
            children: [
              DefaultTextStyle(
                  style: TextStyle(
                    color: Colors.red,//color for all chrildren text
                    fontSize: 20,//size for all children text
                    fontStyle: FontStyle.italic,//style for all children
                  ),
                  child: Column(
                    children: [//children text
                      Text(
                        'My Name',//if we want to change one children style from the other children we can do it by below line 
                        style: TextStyle(fontSize: 10, color: Colors.cyan),//changing children text information
                      ),
                      Text('is Noushad')
                    ],
                  ))
            ],
          ))));
}


Use of TextSpan/text.rich
__________________________

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample app'),
          ),
          body: Center(
            child: Text.rich(
              TextSpan(text: 'Hello',
              style: TextStyle(fontSize: 20,color: Colors.red),
              children: <TextSpan>[
                TextSpan(
                  text: 'World',
                  style: TextStyle(fontSize: 40,color: Colors.green)
                ),
                TextSpan(
                  text: '!',
                  style: TextStyle(fontSize: 50,color: Colors.black)
                )
              ]
              )
            ),
          )
          )));
}


Use of Rich Text
___________________

this method is use to edit a string line's multiple word in different style

code:

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample app'),
          ),
          body: Center(
            child: RichText(
              text: TextSpan(
                text: 'First',
                style: TextStyle(fontSize: 20,color: Colors.green),
                children: <TextSpan>[
                  TextSpan(text: 'Second',
                  style: TextStyle(fontSize: 20,color: Colors.purple  )),
                 TextSpan(text: 'Third',
                  style: TextStyle(fontSize: 20,color: Colors.purple  )),
                   TextSpan(text: 'Default')
                  //style: TextStyle(fontSize: 20,color: Colors.purple  ))
                
                
                ]
                
              ),
            )
          ))));
}


use of text.rich
____________________


import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample app'),
          ),
          body: Center(
            child: Text.rich(
              TextSpan(text: 'Favourite',
              style: TextStyle(fontSize: 20,color: Colors.blue),
              children: <InlineSpan>[
                TextSpan(text: ' Game',
                style: TextStyle(fontSize: 20,color: Colors.yellow)),
                TextSpan(text: ' is Football',
                style: TextStyle(fontSize: 25,color: Colors.cyan))
                
              ]
              )
              
            )
          ))));
}


use of container
________________

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample app'),
          ),
          body: Center(
            child: Container(
              child: Text(
                'My App',
                style: TextStyle(fontSize: 30),
              ),
              color: Colors.orange,
              height: 200,
              width: 200,
              alignment: Alignment.center,
              //padding: EdgeInsets.all(25),
              //padding: EdgeInsets.fromLTRB(20, 40, 60, 80),
              //padding: EdgeInsets.only(left: 20),
              padding: EdgeInsets.symmetric(vertical: 20, horizontal: 40),
              margin: EdgeInsets.all(10),
              constraints: BoxConstraints(
                  maxHeight: 400, maxWidth: 400, minHeight: 20, minWidth: 20),
              //transform: Matrix4.rotationZ(25.00),
              transform: Matrix4.skewX(.5),
	       decoration: BoxDecoration(
                //  color: Colors.orange,
                  //allside border:
                  // border: Border.all(
                  //   color: Colors.black,
                  //   width: 2,
                  //   style: BorderStyle.solid,
                  // ))
                  //indivitual border
                  border: Border(
                      bottom: BorderSide(
                          color: Colors.black,
                          width: 2,
                          style: BorderStyle.solid),
                      left: BorderSide(
                          color: Colors.black,
                          width: 2,
                          style: BorderStyle.solid),
                      right: BorderSide(
                          color: Colors.black,
                          width: 2,
                          style: BorderStyle.solid),
                      top: BorderSide(
                          color: Colors.black,
                          width: 2,
                          style: BorderStyle.solid)),
                  //radius for all side
                  //borderRadius: BorderRadius.all(Radius.circular(30)),
                  // borderRadius: BorderRadius.circular(30)
                  // radius for indivitual side
                  borderRadius: BorderRadius.only(
                    topLeft: Radius.circular(30),
                    bottomLeft: Radius.circular(30),
                    topRight: Radius.circular(30),
                  ),
                  // boxShadow: [
                  //   BoxShadow(
                  //     //blurRadius: 15.00,
                  //     color: Colors.grey,
                  // offset: Offset(10,15)
                  //   )
                  // ],
                 gradient: LinearGradient(colors:)
                 //  shape: BoxShape.circle,   
                  ),
            ),
              
            ),
          ))));
}

use of columb and container
___________________________

use: colom widget divided two or more container in a colom

code: 

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Column(
            children: [
              Container(
                child: Text(
                  'First',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.green,
                padding: EdgeInsets.all(30),
              ),
              Container(
                child: Text(
                  'Second',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.blue,
                padding: EdgeInsets.all(30),
              ),
              Container(
                child: Text(
                  'Third',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.red,
                padding: EdgeInsets.all(30),
              )
            ],
            crossAxisAlignment: CrossAxisAlignment.stretch,
            // verticalDirection: VerticalDirection.down,
            // mainAxisAlignment: MainAxisAlignment.spaceBetween,
          ))));
}



use of raw and container
_________________________

use: raw widget divided two or more container in a raw

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Row(
            children: [
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'First',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.blue,
              ),
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'Second',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.green,
              ),
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'Third',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.yellow,
              )
            ],
            crossAxisAlignment: CrossAxisAlignment.stretch,
            textDirection: TextDirection.rtl,
            mainAxisAlignment: MainAxisAlignment.spaceAround,
          ))));
}

use of expanded or flexible
___________________________

use: expanded make any container suitable to the screen size. or we can say expanded divided two or more container with same space in a tab or window or screen or a app.
on the other hand flexible is same as expanded.but the difference is we can input the value of how much a container will expand in a screen by flexible.

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Column(
            children: [
              Flexible(
                flex: 5,
                child:
              Container(
                child: Text(
                  'First',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.green,
                padding: EdgeInsets.all(30),
                alignment: Alignment.center,
              ),),
              Flexible(
                flex: 4,
                child: 
              Container(
                child: Text(
                  'Second',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.blue,
                padding: EdgeInsets.all(30),
                alignment: Alignment.center,
              ),),
              Flexible(
                flex: 3,
                child: 
              Container(
                child: Text(
                  'Third',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.red,
                padding: EdgeInsets.all(30),
                alignment: Alignment.center,
              ))
            ],
            crossAxisAlignment: CrossAxisAlignment.stretch,
            // verticalDirection: VerticalDirection.down,
            // mainAxisAlignment: MainAxisAlignment.spaceBetween,
          ))));
}


use of flex widget
___________________

use:

flex widget is a combination of raw and column widget. thats maean by flex widget we can combinely organize raw and column in one widget.

code:


import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Flex(
            direction: Axis.horizontal,
            children: [
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'First',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.blue,
                width: 220,
                height: 100,
              ),
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'Second',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.green,
                width: 220,
                height: 100,
              ),
              Container(
                padding: EdgeInsets.all(30),
                child: Text(
                  'Third',
                  style: TextStyle(fontSize: 30, color: Colors.red),
                ),
                color: Colors.yellow,
                width: 220,
                height: 100,
              )
            ],

            //crossAxisAlignment: CrossAxisAlignment.stretch,
            // textDirection: TextDirection.rtl,
            //mainAxisAlignment: MainAxisAlignment.spaceAround,
          ))));
}


use of height factor and width factor

use: height factor and width factor is use for give margin in a page or tab

code:

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Center(
            heightFactor: 2,
            widthFactor: 2,
            child: Container(
              height: 100,
              width: 80,
              color: Colors.blue,
            ),
          )

            //crossAxisAlignment: CrossAxisAlignment.stretch,
            // textDirection: TextDirection.rtl,
            //mainAxisAlignment: MainAxisAlignment.spaceAround,
          )));
}

use of spacer widget
____________________

use:

spacer is use to make space's between two container with value.

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Row(
            children: [
              Container(
                child: Text(
                  'First',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.green,
                padding: EdgeInsets.all(30),
              ),
              Spacer(),
              Container(
                child: Text(
                  'Second',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.blue,
                padding: EdgeInsets.all(30),
              ),
              Spacer(flex: 3,),
              Container(
                child: Text(
                  'Third',
                  style: TextStyle(fontSize: 20, color: Colors.black),
                ),
                color: Colors.red,
                padding: EdgeInsets.all(30),
              )
            ],
            //crossAxisAlignment: CrossAxisAlignment.stretch,
            // verticalDirection: VerticalDirection.down,
            // mainAxisAlignment: MainAxisAlignment.spaceBetween,
          ))));
}


use of card widget:
___________________

use:card widget is use for make a container in style of card with simple shadow and rounded corner.Shape is use for make a shape in a card containe.
evelation is use to make card shadow big or increased.margin property is use for make a margin in a page. shadow color is use to make a evelation or shadow colorfull

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Container(
            height: 200,
            width: 200,
            //color: Color.fromARGB(255, 142, 142, 142),
            child: Card(
              color: Colors.orange,
              shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(40.0)),
              elevation: 50.0,
              margin: EdgeInsets.all(10.0),
              shadowColor: Colors.red,
            ),
          ))));
}


use of sizedbox widget
_______________________

use: it is use for set size of a card

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: SizedBox.fromSize(
            size: Size(150, 150),
            child: Card(
              color: Colors.blue,
              child: Align(
              child: Text('MY BOTTOM'),
            ),),
            // height: double.infinity,
            // width: double.infinity,
          ))));
}


use of single child scroll view widget
_______________________________________

use: it is normally use when two or more containers took more space in a screen and we want to show the full containers in the screen by scrolling that screen.
reverse property is use when we want to show the bottom side on the screen first.it will happen when reverse is false.

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: SingleChildScrollView(
              padding: EdgeInsets.all(20),
              //reverse: true,
              child: Column(
                children: [
                  Container(
                    child: Text('Noushad'),
                    color: Colors.lime,
                    height: 500,
                    width: 500,
                  ),
                  Container(
                    child: Text('Bhuiyan'),
                    color: Colors.pinkAccent,
                    height: 500,
                    width: 500,
                  )
                ],
              )))));
}


use of placeholder widget

use: place holder widget is usually use to take a finite ammount of space's which we could replace with picture logo or anything else.

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      home: Scaffold(
          appBar: AppBar(
            title: Text('Sample App'),
          ),
          body: Column(
            children: [
              Placeholder(
                strokeWidth: 20,
                color: Colors.blue,
                fallbackHeight: 200,
              fallbackWidth: 200,
              ),
              Spacer(),
              Placeholder(
                fallbackHeight: 100,
                fallbackWidth: 100,
                color: Colors.red,
                strokeWidth: 30,
              )
            ],
          ) 
          )));
}



use of appbar widget:

use: appbar is use for giving a bar in a app.the bar contain menu search option, three dots etc.debugShowCheckedModeBanner property is use to remove the extra text in appbar
leading property is use to make a icon of profile in appbar.and drawer property is use to make a three line option which will open several tab that we set. actions property is use to
appear three dots in the top right corner of the appbar.actionsIconTheme property is use to change the three dots icons properties like color,opacity,size etc.

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          appBar: AppBar(
            // title: Container(
            //   width: 100,
            //   height: 130,
            //   child: Image.network(
            //       'https://static-blog.treebo.com/wp-content/uploads/2018/06/manali.jpg'),
            // ),
            //centerTitle: true,
            //   leading: Icon(Icons.account_box),
            //   leadingWidth: 300,//use to take replace the icon
            // ),
            // actions: [Icon(Icons.more_vert)],
            // backgroundColor: Colors.lightGreen,
            // actionsIconTheme: IconThemeData(color: Colors.red),
            title: Text('APP'),
            titleTextStyle: TextStyle(color: Colors.pink),
            elevation: 20,
            shadowColor: Colors.grey,
            // toolbarHeight: 120,
            // toolbarOpacity: .5,
          ),
          drawer: Drawer(),
          body: Center(
            child: Container(
              child: Text('Hello'),
              color: Colors.blue,
              padding: EdgeInsets.all(25),
            ),
          ))));
}


use of textbottom widget
_________________________

use: textbottom is use to add a text bottom on a application. onpressed property is use to add what i need to do when i press the bottom widget.and
onlongpressed property is use to add what i need to do when i long press on that bottom.when i write onpressed: null than that bottom will stop working.
icon property is for add icon in a bottom and lebel property is use to add text on that icon. TextButton.styleFrom property is use to customize the text size,color,
background color etc.side : borderside property is use to make a border on a bottom.shape property is use to give a shape to the bottom

code:

import 'package:flutter/material.dart';

int hexColor(String c) {
  String sColor = '0xff' + c;
  sColor = sColor.replaceAll('#', '');
  int dColor = int.parse(sColor);
  return dColor;
}

void main() {
  runApp(MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          appBar: AppBar(
            title: Text('MyApp'),
          ),
          drawer: Drawer(),
          body: Center(
              child: TextButton.icon(
            icon: Icon(Icons.arrow_back),
            label: Text('Back'),
            onPressed: () {},
            style: TextButton.styleFrom(
                primary: Colors.blue,
                //backgroundColor: Colors.red,
                textStyle: TextStyle(fontSize: 30),
                side: BorderSide(color: Colors.blue,width: 2),
                shape: BeveledRectangleBorder(
                  borderRadius: BorderRadius.all(Radius.circular(10))
                )
                ),
                
            // child: Text('Botton'),
            // onPressed: () {
            //   print('Pressed');
            // },
          )
          
          ))));
}




by noushad
